services:
  redis-db:
    image: 'redis:alpine'
    container_name: redis-db
    command: redis-server
    volumes:
      - redis:/data
    networks:
      blockscout:
        ipv4_address: 172.16.240.120

  db-init:
    image: postgres:17
    volumes:
      - "postgres:/var/lib/postgresql/data"
    entrypoint:
      - sh
      - -c
      - |
        chown -R 2000:2000 /var/lib/postgresql/data
    networks:
      blockscout:
        ipv4_address: 172.16.240.110

  db:
    image: postgres:17
    user: 2000:2000
    shm_size: 256m
    restart: always
    container_name: 'db'
    command: postgres -c 'max_connections=200' -c 'client_connection_check_interval=60000'
    environment:
      POSTGRES_DB: 'blockscout'
      POSTGRES_USER: 'blockscout'
      POSTGRES_PASSWORD: 'ceWb1MeLBEeOIfk65gU8EjF8'
    # ports:
    #   - target: 5432
    #     published: 7432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U blockscout -d blockscout" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      db-init:
        condition: service_completed_successfully
    volumes:
      - "postgres:/var/lib/postgresql/data"
    networks:
      blockscout:
        ipv4_address: 172.16.240.111

  backend:
    image: ghcr.io/blockscout/${DOCKER_REPO:-blockscout}:${DOCKER_TAG:-8.0.2}
    restart: always
    stop_grace_period: 5m
    container_name: 'backend'
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - backend.env
    depends_on:
      - db
      - redis-db
    links:
      - db:database
    environment:
      DATABASE_URL: postgresql://blockscout:ceWb1MeLBEeOIfk65gU8EjF8@172.16.240.111:5432/blockscout
      ETHEREUM_JSONRPC_HTTP_URL: http://host.docker.internal:8545/
      ETHEREUM_JSONRPC_TRACE_URL: http://host.docker.internal:8545/
      ETHEREUM_JSONRPC_WS_URL: ws://host.docker.internal:8546/
      CHAIN_ID: 1337
    volumes:
      - ./logs/:/app/logs/
      - backend.dets:/app/dets/
    networks:
      blockscout:
        ipv4_address: 172.16.240.101

  frontend:
    image: ghcr.io/blockscout/frontend:${FRONTEND_DOCKER_TAG:-v2.0.1}
    platform: linux/amd64
    restart: always
    container_name: 'frontend'
    env_file:
      - frontend.env
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_STATS_API_HOST:
    networks:
      blockscout:
        ipv4_address: 172.16.240.102

  proxy:
    image: nginx
    container_name: proxy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      BACK_PROXY_PASS: ${BACK_PROXY_PASS:-http://backend:4000}
      FRONT_PROXY_PASS: ${FRONT_PROXY_PASS:-http://frontend:3000}
    ports:
      - target: 80
        published: 80
    depends_on:
      - backend
      - frontend
    volumes:
      - "./proxy/explorer.conf.template:/etc/nginx/templates/default.conf.template"
    networks:
      blockscout:
        ipv4_address: 172.16.240.100

volumes:
  postgres:
  redis:
  backend.dets:


networks:
  blockscout:
    name: blockscout
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.240.0/24
